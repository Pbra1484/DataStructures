<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<diagram program="umlet" version="14.2">
  <zoom_level>9</zoom_level>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>72</x>
      <y>270</y>
      <w>270</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>Timer
--

--
-clock_t executionTime;
+Timer()
+void startTimer()
+void stopTimer()
+void resetTimer()
+void displayTimerInformation()
+long getExecutionTimeInMicroseconds()
</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>657</x>
      <y>36</y>
      <w>342</w>
      <h>162</h>
    </coordinates>
    <panel_attributes>IntNode
--
- nodeData:int
- nodePointer:IntNode *
--
+ getNodeData() : int
+ getNodePointer() : IntNode *
+ setNodeData(int stuff) : void
+ setNodePointer(IntNode *) : void
+ IntNode() : constructor
+ IntNode(int value) : constructor
+ IntNode(int value, IntNode * nextNode) : constructor
group=1
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>657</x>
      <y>261</y>
      <w>252</w>
      <h>153</h>
    </coordinates>
    <panel_attributes>IntNodeArray
--
- size : int
- front : IntNode *
--
+ IntNodeArray(int size) :constructor
+ setAtIndex(int index, int value) : void
+ getFromIndex(int index) : int
+ getSize() : int
group=1
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>639</x>
      <y>0</y>
      <w>432</w>
      <h>432</h>
    </coordinates>
    <panel_attributes>Int Array
--
bg=orange
group=1
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>36</x>
      <y>513</y>
      <w>333</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>Node&lt;Type&gt;
--
- nodeData : Type
- nodeData :	Node&lt;Type&gt; *
--
+ Node() : constructor
+ Node(Type value) : constructor
+ Node(Type data, Node&lt;Type&gt; * pointer) : constructore

+ getNodeData() : Type
+ getNodePointer() : Node&lt;Type&gt; *
+ setNodeData(Type data) : void
+ setNodePointer(Node&lt;Type&gt; * next) : void
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>783</x>
      <y>189</y>
      <w>27</w>
      <h>90</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-</panel_attributes>
    <additional_attributes>10.0;80.0;10.0;10.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>459</x>
      <y>513</y>
      <w>441</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>Model :: Array&lt;Type&gt;
--
- frond : Node&lt;Type&gt; *
- size : int
--
+ Array() : constructor
+ Array(int size) : constructor
+ ~Array&lt;Type&gt;() : destructor

+ Array&lt;Type&gt;(const Array&lt;Type&gt; &amp; toBeCopied) : copy constructor
+ getSize() : int
+ setAtIndex(int index, Type value) : void
+ getFromIndex(int index) : Type
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>UMLPackage</id>
    <coordinates>
      <x>0</x>
      <y>468</y>
      <w>936</w>
      <h>612</h>
    </coordinates>
    <panel_attributes>&lt;Type&gt; Array/List
--
bg=orange
group=2</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>621</y>
      <w>117</w>
      <h>45</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n
</panel_attributes>
    <additional_attributes>110.0;20.0;10.0;20.0</additional_attributes>
  </element>
  <element>
    <id>UMLClass</id>
    <coordinates>
      <x>459</x>
      <y>810</y>
      <w>441</w>
      <h>243</h>
    </coordinates>
    <panel_attributes>Model :: List&lt;Type&gt;
--
- size : int
- front : Node&lt;Type&gt; *
--
+ List&lt;Type&gt;() : constructor
+ List&lt;Type&gt;(const List&lt;Type&gt; &amp; source) : copy constructor
+ ~List&lt;Type&gt;() : destructor

+ addAtIndex(int index, Type value) : void
+ add(Type value) : void
+ remove(int index) : Type
+ setAtIndex(int index, Type data) : Type
+ getFromIndex(int index) : Type
+ contain(Type data) : bool
+ getSize() const : int
+ getFront() const : Node&lt;Type&gt; *

group=1
layer=1</panel_attributes>
    <additional_attributes/>
  </element>
  <element>
    <id>Relation</id>
    <coordinates>
      <x>360</x>
      <y>711</y>
      <w>117</w>
      <h>270</h>
    </coordinates>
    <panel_attributes>lt=&lt;&lt;&lt;&lt;&lt;-
m2=1..n
</panel_attributes>
    <additional_attributes>110.0;280.0;60.0;280.0;60.0;10.0;10.0;10.0</additional_attributes>
  </element>
</diagram>
